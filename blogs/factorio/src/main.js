const add_result_row=function(parent,production_data,count,alt=false){const ceiled_count=Math.ceil(count);let elem=document.createElement("tr");let product_counts=0;const machine_name_elem=document.createElement("td");if(alt)machine_name_elem.classList.add("alt");machine_name_elem.innerText=`${production_data.craft_machine}`;elem.appendChild(machine_name_elem);const count_elem=document.createElement("td");if(alt)count_elem.classList.add("alt");count_elem.innerText=`${count.toFixed(2)} (${ceiled_count})`;elem.appendChild(count_elem);for(const p of production_data.products){const rate_per_machine=p.num_per_tick/production_data.craft_time;elem.insertAdjacentHTML("beforeend",`<td class="output">Output</td>
        <td class="output">${p.id}</td>
        <td class="output">${(rate_per_machine * count).toFixed(2)}</td>`);product_counts+=1;parent.appendChild(elem);elem=document.createElement("tr");}
if(production_data.fuel!=null){elem.insertAdjacentHTML("beforeend",`<td class="fuel">Fuel</td>
        <td class="fuel">${production_data.fuel.id}</td>
        <td class="fuel">${(production_data.fuel.consumption_rate * count).toFixed(2)}</td>`);product_counts+=1;parent.appendChild(elem);elem=document.createElement("tr");}
for(const p of production_data.requires){elem.insertAdjacentHTML("beforeend",`<td class="input">Input</td>
        <td class="input">${p.id}</td>
        <td class="input">${((p.num_per_tick * count) / production_data.craft_time).toFixed(2)}</td>`);product_counts+=1;parent.appendChild(elem);elem=document.createElement("tr");}
if(product_counts>1){machine_name_elem.rowSpan=product_counts;count_elem.rowSpan=product_counts;}};const make_set=function(arr){const set=new Set();for(const a of arr){set.add(a);}
return set;};window.addEventListener("load",async function(){pvirie_dialogue.display_load(true);await factorio.load();const all_products=factorio.all_products();const all_productions=factorio.all_productions();const all_production_details=factorio.all_production_details();const product_speed_suggest=new Suggest_list(document.querySelector("#product-speed .widget-search-input"),document.querySelector("#product-speed .widget-tag-list"),document.querySelector("#product-speed .widget-tag-suggest"),(id)=>{const elem=document.createElement("span");elem.classList.add("button");elem.id=id;elem.innerText=all_products[id];return elem;},(id)=>{const elem=document.createElement("div");elem.classList.add("left-right");const label=document.createElement("label");const close_button=document.createElement("div");close_button.classList.add("material-symbols-outlined","button","close");close_button.innerText="close";label.appendChild(close_button);label.appendChild(document.createTextNode(all_products[id]));const item_container=document.createElement("div");elem.appendChild(label);const item=document.createElement("input");item.id=`${id}-target-speed`;item.type="number";item.value=1;item.min=0;item.max=1000;item.step=0.25;item_container.appendChild(item);item_container.appendChild(document.createTextNode(" pcs/s"));elem.appendChild(item_container);return elem;});const process_disable_suggest=new Suggest_list(document.querySelector("#process-disabled .widget-search-input"),document.querySelector("#process-disabled .widget-tag-list"),document.querySelector("#process-disabled .widget-tag-suggest"),(id)=>{const elem=document.createElement("span");elem.classList.add("button");elem.id=id;elem.innerText=all_productions[id];return elem;},(id)=>{const elem=document.createElement("label");elem.id=id;const close_button=document.createElement("div");close_button.classList.add("material-symbols-outlined","button","close");close_button.innerText="close";elem.appendChild(close_button);elem.appendChild(document.createTextNode(all_productions[id]));return elem;});product_speed_suggest.add_items(Object.keys(all_products).map((id)=>{return{tag:id,display:all_products[id],};}));process_disable_suggest.add_items(Object.keys(all_productions).map((id)=>{return{tag:id,display:all_productions[id],};}));const calculate_button=document.getElementById("calculate-button");const result=document.getElementById("result");calculate_button.addEventListener("click",async function(e){pvirie_dialogue.display_load(true);let unlocked_planets=[];if(document.querySelector("#enable-nauvis").checked)unlocked_planets.push("Nauvis");if(document.querySelector("#enable-space-platform").checked)unlocked_planets.push("Space platform");if(document.querySelector("#enable-vulcanus").checked)unlocked_planets.push("Vulcanus");if(document.querySelector("#enable-fulgora").checked)unlocked_planets.push("Fulgora");if(document.querySelector("#enable-gleba").checked)unlocked_planets.push("Gleba");if(document.querySelector("#enable-aquilo").checked)unlocked_planets.push("Aquilo");unlocked_planets=make_set(unlocked_planets);let material_form=[];if(document.querySelector("#import-from-nauvis").checked)material_form.push("Nauvis");if(document.querySelector("#import-from-space-platform").checked)material_form.push("Space platform");if(document.querySelector("#import-from-vulcanus").checked)material_form.push("Vulcanus");if(document.querySelector("#import-from-fulgora").checked)material_form.push("Fulgora");if(document.querySelector("#import-from-gleba").checked)material_form.push("Gleba");if(document.querySelector("#import-from-aquilo").checked)material_form.push("Aquilo");material_form=make_set(material_form);const results=factorio.calculate((id)=>{const recipe=all_production_details[id];return!process_disable_suggest.get_selected().includes(id)&&unlocked_planets.has(recipe.unlock_planet)&&!recipe.buildable_on.isDisjointFrom(material_form);},(id)=>{const v=product_speed_suggest.get_selected().includes(id)?document.getElementById(`${id}-target-speed`).value:"";if(v==="")return 0;return parseFloat(v);});const result_list=document.getElementById("production-plan");while(result_list.firstChild)result_list.firstChild.remove();let alt=false;for(const r of results){const detail=all_production_details[r.id];add_result_row(result_list,detail,r.count,alt);alt=!alt;}
const product_statistics={};for(const r of results){const detail=all_production_details[r.id];for(const p of detail.products){const product_id=p.id;if(product_statistics[product_id]==null){product_statistics[product_id]=[0,0];}
product_statistics[product_id][0]+=(p.num_per_tick*r.count)/detail.craft_time;}
for(const p of detail.requires){const product_id=p.id;if(product_statistics[product_id]==null){product_statistics[product_id]=[0,0];}
product_statistics[product_id][1]+=(p.num_per_tick*r.count)/detail.craft_time;}
if(detail.fuel!=null){const product_id=detail.fuel.id;if(product_statistics[product_id]==null){product_statistics[product_id]=[0,0];}
product_statistics[product_id][1]+=detail.fuel.consumption_rate*r.count;}}
const production_statistics=document.querySelector("#production-statistics");while(production_statistics.firstChild)production_statistics.firstChild.remove();for(const id of Object.keys(product_statistics)){const row=document.createElement("tr");const product=document.createElement("td");product.innerText=id;row.appendChild(product);const produce=document.createElement("td");produce.innerText=product_statistics[id][0].toFixed(2);row.appendChild(produce);const consume=document.createElement("td");consume.innerText=product_statistics[id][1].toFixed(2);row.appendChild(consume);const net=document.createElement("td");const net_value=product_statistics[id][0]-product_statistics[id][1];net.innerText=net_value.toFixed(2);row.appendChild(net);production_statistics.appendChild(row);}
pvirie_dialogue.display_load(false);const result_doms=document.getElementById("results");result_doms.scrollIntoView({behavior:"smooth"});});for(const result_element of document.querySelectorAll(".result")){const copy_button=result_element.querySelector(".button");const table=result_element.querySelector("table");copy_button.addEventListener("click",function(){utils.table_to_csv_clipboard(table);});}
pvirie_dialogue.display_load(false);});