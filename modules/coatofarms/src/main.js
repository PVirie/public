const transform=function(svg_object,timeline,duration,delay,t,ease="<>"){const runner=new SVG.Runner(duration);runner.ease(ease);runner.transform(t);runner.element(svg_object);timeline.schedule(runner,delay,"now");runner.animate();};const move=function(svg_object,timeline,duration,delay,x,y,ease="<>"){const runner=new SVG.Runner(duration);runner.ease(ease);runner.center(x,y);runner.element(svg_object);timeline.schedule(runner,delay,"now");runner.animate();};const settle=function(svg_object,timeline,duration,delay){const pre_runner=new SVG.Runner(0.01);pre_runner.element(svg_object);pre_runner.after(function(){svg_object.toggleClass("active");});timeline.schedule(pre_runner,delay,"now");pre_runner.animate();const runner=new SVG.Runner(duration);runner.element(svg_object);runner.after(function(){svg_object.toggleClass("active");});timeline.schedule(runner,delay+duration,"now");runner.animate();};const clone_object=function(obj){if(obj===null||typeof obj!=="object"){return obj;}
if(obj instanceof Date){return new Date(obj.getTime());}
if(Array.isArray(obj)){const clonedArray=[];for(const item of obj){clonedArray.push(clone_object(item));}
return clonedArray;}
const clonedObj={};for(const key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){clonedObj[key]=clone_object(obj[key]);}}
return clonedObj;};const pieces=[{path:"M 436.906 209.406 C 365.585 209.406 300.242 235.018 249.594 277.563 C 223.64 299.364 201.537 325.608 184.469 355.125 C 167.657 384.198 155.717 416.448 149.781 450.75 C 146.968 467.005 145.5 483.722 145.5 500.781 C 145.5 626.587 225.252 733.77 336.938 774.563 C 368.117 785.951 401.785 792.188 436.906 792.188 C 472.294 792.188 506.185 785.866 537.563 774.313 C 648.877 733.326 728.281 626.321 728.281 500.781 C 728.281 483.588 726.794 466.751 723.938 450.375 C 717.979 416.216 706.061 384.089 689.313 355.125 C 672.512 326.071 650.834 300.19 625.406 278.594 C 574.59 235.433 508.801 209.406 436.906 209.406 L 436.906 209.406 Z M 436.906 252.813 C 490.165 252.813 539.495 269.611 579.906 298.188 C 609.09 318.824 590.043 370.611 608.031 401.656 C 625.469 431.751 680.321 440.863 683.75 477.25 C 684.481 485.004 684.875 492.836 684.875 500.781 C 684.875 599.453 627.22 684.669 543.781 724.594 C 502.459 744.366 475.184 698.75 436.906 698.75 C 399.847 698.75 371.043 743.578 333.094 726.063 C 247.984 686.781 188.938 600.672 188.938 500.781 C 188.938 493.31 189.259 485.928 189.906 478.625 C 193.152 441.986 247.811 432.877 265.25 402.563 C 283.247 371.279 264.413 319.054 293.75 298.281 C 334.185 269.651 383.592 252.813 436.906 252.813 Z M 638.063 324.281 C 646.389 324.199 657.39 330.784 675.25 361.719 C 698.111 401.315 692.004 411.218 684.75 417.594 C 677.496 423.969 640.959 423.795 622.656 392.094 C 604.353 360.392 622.445 328.626 631.594 325.531 C 633.595 324.854 635.731 324.304 638.063 324.281 Z M 234.813 325.781 C 237.144 325.804 239.249 326.354 241.25 327.031 C 250.398 330.126 268.522 361.892 250.219 393.594 C 231.916 425.295 195.348 425.469 188.094 419.094 C 180.839 412.718 174.733 402.815 197.594 363.219 C 215.454 332.284 226.486 325.699 234.813 325.781 Z M 436.875 714.938 C 473.481 714.938 491.925 746.499 490.031 755.969 C 488.137 765.439 482.597 775.688 436.875 775.688 C 391.153 775.688 385.613 765.439 383.719 755.969 C 381.825 746.499 400.269 714.938 436.875 714.938 Z",fill:"#777",type:"base",copy:[{a:1,b:0,c:0,d:1,e:0,f:0,},],},{group:[{path:"M 436.894 873.031 C 431.037 873.031 423.831 852.007 416.425 835.062 C 407.476 814.586 398.862 796.446 400.425 781.594 C 403.283 754.451 419.057 740.188 436.894 740.188 C 454.731 740.188 470.475 754.451 473.332 781.594 C 474.895 796.446 466.281 814.586 457.332 835.063 C 449.926 852.007 442.752 873.031 436.894 873.031 L 436.894 873.031 Z",fill:"#aaa",copy:[{a:1,b:0,c:0,d:-1,e:0,f:0,},],},],type:"fin",copy:[{a:1,b:0,c:0,d:-1,e:0,f:300,},{a:-0.5,b:0.8660254037844386,c:0.8660254037844386,d:0.5,e:300*-0.8660254037844386,f:300*-0.5,},{a:-0.5,b:-0.8660254037844386,c:-0.8660254037844386,d:0.5,e:300*0.8660254037844386,f:300*-0.5,},],},{group:[{path:"M 435.594 327.969 C 341.064 327.969 264.438 404.626 264.438 499.156 C 264.438 593.686 341.064 670.313 435.594 670.313 C 530.124 670.313 606.781 593.686 606.781 499.156 C 606.781 404.626 530.124 327.969 435.594 327.969 Z M 436.906 363.844 L 436.938 378.75 L 436.969 363.844 C 516.975 363.872 545.877 417.628 522.969 435.625 C 503.922 450.588 491.579 423.438 437.031 423.438 L 436.938 378.75 L 436.844 423.438 C 382.296 423.438 369.953 450.588 350.906 435.625 C 327.998 417.628 356.9 363.872 436.906 363.844 Z M 328.406 461.25 C 330.967 461.201 333.558 461.671 336.094 462.688 C 358.576 471.701 341.243 495.963 368.563 543.281 C 395.882 590.6 425.56 587.711 422.125 611.688 C 417.994 640.525 356.997 642.361 316.969 573.094 C 280.694 510.264 303.652 461.728 328.406 461.25 Z M 546.094 461.25 C 570.848 461.728 593.806 510.264 557.531 573.094 C 517.503 642.361 456.506 640.525 452.375 611.688 C 448.94 587.711 478.587 590.6 505.906 543.281 C 533.226 495.963 515.924 471.701 538.406 462.688 C 540.942 461.671 543.533 461.201 546.094 461.25 Z",fill:"#777",copy:[{a:1,b:0,c:0,d:1,e:0,f:0,},],},{path:"M 483.851 500.797 C 483.851 536.956 444.707 559.555 413.392 541.476 C 398.859 533.085 389.906 517.578 389.906 500.797 C 389.906 464.638 429.05 442.038 460.365 460.118 C 474.898 468.509 483.851 484.015 483.851 500.797 Z",fill:"#fff",copy:[{a:1,b:0,c:0,d:1,e:0,f:0,},],},],type:"base",copy:[{a:1,b:0,c:0,d:1,e:0,f:0,},],},{group:[{path:"M 436.894 0 C 416.78 0 418.898 106.004 408.3 142.219 C 396.114 183.862 363.909 224.259 367.582 255.781 C 371.163 286.519 380.248 275.387 401.144 302.938 C 422.34 330.882 414.772 351.509 436.894 352.938 C 459.017 351.509 451.417 330.882 472.613 302.938 C 493.509 275.387 502.594 286.519 506.175 255.781 C 509.848 224.259 477.674 183.862 465.488 142.219 C 454.89 106.004 457.009 0 436.894 0 Z",fill:"#aaa",copy:[{a:1,b:0,c:0,d:1,e:0,f:0,},],},{path:"M 436.894 156.5 C 431.036 156.5 423.831 177.524 416.425 194.469 C 407.476 214.946 398.862 233.085 400.425 247.938 C 403.283 275.08 419.057 289.344 436.894 289.344 C 454.731 289.344 470.474 275.08 473.332 247.938 C 474.895 233.085 466.281 214.946 457.332 194.469 C 449.926 177.524 442.752 156.5 436.894 156.5 Z",fill:"#fff",copy:[{a:1,b:0,c:0,d:1,e:0,f:50,},],},],type:"fin",copy:[{a:1,b:0,c:0,d:1,e:0,f:-300,},{a:-0.5,b:0.8660254037844386,c:-0.8660254037844386,d:-0.5,e:-300*-0.8660254037844386,f:-300*-0.5,},{a:-0.5,b:-0.8660254037844386,c:0.8660254037844386,d:-0.5,e:-300*0.8660254037844386,f:-300*-0.5,},],},];const draw_objects=function(parent,group,cx,cy){const bases=[];const fins=[];for(const p of group){for(const c of p.copy){const clone=clone_object(c);clone.e=clone.e+cx;clone.f=clone.f+cy;let obj=null;if(p.group!=null){obj=parent.group();draw_objects(obj,p.group,cx,cy);}else{obj=parent.path(p.path).fill(p.fill);if(p.fill==="#fff"){obj.addClass("glow");}}
if(p.type==="fin")fins.push(obj.center(0,0).transform(clone));else bases.push(obj.center(0,0).transform(clone));}}
return[bases,fins];};const start_interval=function(runner,period){runner();return setInterval(runner,period);};const setup_animation=function(parent,width,height,margin){const timeline=new SVG.Timeline();const cx=width/2;const cy=height/2;const s=width/2000;parent.center(0,0).scale(s,s).translate(cx,cy);const objects=draw_objects(parent,pieces,0,0);const bases=objects[0];const fins=objects[1];const fin_transforms=[];for(const part of fins)fin_transforms.push(part.transform());return start_interval(function(){for(let i=0;i<fins.length;++i){const part=fins[i];const origin=fin_transforms[i];transform(part,timeline,500,0,{a:origin.a,b:origin.b,c:origin.c,d:origin.d,e:origin.e-600*origin.c,f:origin.f-600*origin.d,});transform(part,timeline,100,500,{a:-origin.a,b:-origin.b,c:-origin.c,d:-origin.d,e:origin.e-600*origin.c,f:origin.f-600*origin.d,});transform(part,timeline,500,600,{a:-origin.a,b:-origin.b,c:-origin.c,d:-origin.d,e:origin.e-100*origin.c,f:origin.f-100*origin.d,});let current={a:-origin.a,b:-origin.b,c:-origin.c,d:-origin.d,e:-400*origin.c,f:-400*origin.d,};const steps=24;const c=Math.cos((2*Math.PI)/steps);const s=Math.sin((2*Math.PI)/steps);for(let i=0;i<steps;++i){current={a:c*current.a+s*current.c,b:c*current.b+s*current.d,c:-s*current.a+c*current.c,d:-s*current.b+c*current.d,e:400*(-s*current.a+c*current.c),f:400*(-s*current.b+c*current.d),};transform(part,timeline,1500/steps,1100+(i*1500)/steps,current,"-");}
transform(part,timeline,500,2600,{a:-origin.a,b:-origin.b,c:-origin.c,d:-origin.d,e:origin.e-600*origin.c,f:origin.f-600*origin.d,});transform(part,timeline,100,3100,{a:origin.a,b:origin.b,c:origin.c,d:origin.d,e:origin.e-600*origin.c,f:origin.f-600*origin.d,});transform(part,timeline,1000,3200,origin);settle(part,timeline,100,4200);}
for(const part of bases){settle(part,timeline,100,4200);}
timeline.play();},10000);};const draw=function(parent){const container_rect=parent.getBoundingClientRect();const computed_style=getComputedStyle(parent);const width=container_rect.width-parseFloat(computed_style.paddingLeft)-parseFloat(computed_style.paddingRight);const height=container_rect.height-parseFloat(computed_style.paddingTop)-parseFloat(computed_style.paddingBottom);const margin={top:10,right:10,bottom:10,left:10};const svg=SVG().addTo(parent).size(width,height);const canvas_group=svg.group();return setup_animation(canvas_group,width,height,margin);};const parse_all=function(){for(const b of blocks){if(b.animator!=null)clearInterval(b.animator);while(b.firstChild)b.firstChild.remove();b.animator=draw(b);}};let delayer=null;const blocks=document.querySelectorAll(".canvas");window.addEventListener("resize",function(){if(delayer!=null)clearTimeout(delayer);delayer=setTimeout(function(){parse_all();},500);});window.onload=function(){parse_all();};